#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 07 * * 1-5')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://ia-case-payments-api-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
    string(name: 'SecurityRules',
      defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "ia"
def component = "ia-case-payments-api"

def secrets = [
  'ia-${env}': [

    secret('test-law-firm-a-username', 'TEST_LAW_FIRM_A_USERNAME'),
    secret('test-law-firm-a-password', 'TEST_LAW_FIRM_A_PASSWORD'),

    secret('test-law-firm-org-success-username', 'TEST_LAW_FIRM_ORG_SUCCESS_USERNAME'),
    secret('test-law-firm-org-success-password', 'TEST_LAW_FIRM_ORG_SUCCESS_PASSWORD'),

    secret('test-law-firm-org-deleted-username', 'TEST_LAW_FIRM_ORG_DELETED_USERNAME'),
    secret('test-law-firm-org-deleted-password', 'TEST_LAW_FIRM_ORG_DELETED_PASSWORD'),

    secret('test-citizen-username', 'TEST_CITIZEN_USERNAME'),
    secret('test-citizen-password', 'TEST_CITIZEN_PASSWORD'),

    secret('system-username', 'IA_SYSTEM_USERNAME'),
    secret('system-password', 'IA_SYSTEM_PASSWORD'),

    secret('idam-redirect-uri', 'IA_IDAM_REDIRECT_URI'),
    secret('idam-client-id', 'IA_IDAM_CLIENT_ID'),
    secret('idam-secret', 'IA_IDAM_SECRET'),
    secret('s2s-secret', 'IA_S2S_SECRET'),
    secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),
    secret('ia-config-validator-secret', 'IA_CONFIG_VALIDATOR_SECRET')

  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withNightlyPipeline(type, product, component) {

  env.TEST_URL = params.URL_TO_TEST
  env.Rules = params.SecurityRules

  env.IDAM_URL = "https://idam-web-public.aat.platform.hmcts.net"
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.CCD_URL = "http://ccd-data-store-api-aat.service.core-compute-aat.internal"

  loadVaultSecrets(secrets)

  enableSecurityScan()
  // enableMutationTest()
  enableSlackNotifications('#ia-tech')
  enableFullFunctionalTest()

  afterAlways('DependencyCheckNightly') {
  publishHTML([
    allowMissing         : true,
    alwaysLinkToLastBuild: true,
    keepAll              : true,
    reportDir            : "build/reports",
    reportFiles          : 'dependency-check-report.html',
    reportName           : 'Dependency Check Report'
  ])
}

}
