buildscript {
  dependencies {
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.11")
  }
}

plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id "info.solidsoft.pitest" version '1.5.2'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.7.0'
  id 'uk.gov.hmcts.java' version '0.12.5'
  id 'org.owasp.dependencycheck' version '6.5.3'
  id 'com.github.ben-manes.versions' version '0.42.0'
  id 'org.sonarqube' version '3.0'
  id 'au.com.dius.pact' version '4.1.7'

}

apply plugin: 'net.serenity-bdd.aggregator'
group = 'uk.gov.hmcts.reform'
version = '0.0.1'

allprojects {
  sourceCompatibility = 11
  targetCompatibility = 11
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  useJUnitPlatform()
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"

  systemProperty "scenario", System.getProperty('scenario')

  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  finalizedBy aggregate
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

task contract(type: Test, description: 'Runs the pact contract tests.', group: 'Verification') {
  description = "Runs the consumer Pact tests"
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath

}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.29'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "6.18.0"
  ignoreFailures = true
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

project.tasks['sonarqube'].dependsOn test, integration

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

pitest {
  junit5PluginVersion = '0.12'
  targetClasses = ['uk.gov.hmcts.reform.iacasepaymentsapi.*']
  excludedClasses = [
    'uk.gov.hmcts.reform.iacasepaymentsapi.infrastructure.config.*',
    'uk.gov.hmcts.reform.iacasepaymentsapi.Application',
    'uk.gov.hmcts.reform.iacasepaymentsapi.CcdScenarioRunnerTest'
  ]
  threads = 10
  outputFormats = ['XML', 'HTML']
  timestampedReports = false
  failWhenNoMutations = false
}

project.tasks['pitest'].group = "Verification"

sonarqube {
  properties {
    property "sonar.projectName", "IA :: Immigration & Asylum Payments API"
    property "sonar.projectKey", "IACASEPAYMENTSAPI"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/iacasepaymentsnapi/infrastructure/config/**," +
                                 "src/main/java/uk/gov/hmcts/reform/iacasepaymentsnapi/Application.java"
  }
}

project.ext {
  pacticipant = 'ia_casePaymentsApi'
  pacticipantVersion = getCheckedOutGitCommitHash()
}

def getCheckedOutGitCommitHash() {
  'git rev-parse --verify --short HEAD'.execute().text.trim()
}


task runAndPublishConsumerPactTests(type: Test, description: 'Publish pact test to broker.', group: 'Verification') {
  onlyIf {
    return System.env.SKIP_CONTRACT_TESTS == null || System.env.SKIP_CONTRACT_TESTS == 'false'
  }
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath
  systemProperty 'pact.rootDir', "pacts"
  testLogging.showStandardStreams = true
}

runAndPublishConsumerPactTests.finalizedBy pactPublish

pact {
  broker {
    pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
  }
  publish {
    pactDirectory = 'pacts'
    tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
    version = project.pacticipantVersion
  }
}
// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}


def versions = [
  pitest          : '1.5.2',
  junit           : '5.7.0',
  junitPlatform   : '1.7.2',
  reformLogging   : '5.1.7',
  springBoot      : '2.7.0',
  springDoc       : '1.6.8',
  pact_version    : '4.1.7',
  serenity        : '3.1.20',
  springSecurity  : '5.7.1'
]


dependencyManagement {
  dependencies {
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '30.0-jre') {
      entry 'guava'
    }

    dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.63') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-el'
      entry 'tomcat-embed-websocket'
    }


    //CVE-2021-22119
    dependency group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity

    //CVE-2021-42550
    dependencySet(group: 'ch.qos.logback', version: '1.2.10') {
      entry 'logback-classic'
      entry 'logback-core'
    }

    //CVE-2021-44228, CVE-2021-44832, CVE-2021-45046
    dependencySet(group: 'org.apache.logging.log4j', version: '2.17.1') {
      entry 'log4j-api'
      entry 'log4j-to-slf4j'
    }
  }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}


ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
  ]
]

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
  functionalTestCompile.extendsFrom testCompile
  functionalTestRuntime.extendsFrom testRuntime
  contractTestCompile.extendsFrom testCompile
  contractTestRuntime.extendsFrom testRuntime
}

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot

  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.1'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-dependencies', version: '2021.0.3'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'

  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity

  // CVE-2019-17195
  implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.22'

  // CVE-2021-27568
  implementation group: 'net.minidev', name: 'json-smart', version: '2.4.8'

  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: versions.springDoc

  implementation group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '2.3.3'

  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.3'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.3'
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
  implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.3'

  implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging

  implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.1.0'

  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.2'

  implementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.4'


  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

  implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'


  annotationProcessor 'org.projectlombok:lombok:1.18.12'
  implementation 'org.projectlombok:lombok:1.18.12'

  testImplementation libraries.junit5

  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
  testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.7.1'

  testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.6.28'
  testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'

  testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
    exclude group: "com.vaadin.external.google", module: "android-json"
  }

  testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.6.28'
  testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.23.2'
  testImplementation group: 'ru.lanwen.wiremock', name: 'wiremock-junit5', version: '1.3.1'

  testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.1'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity



  testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
  testImplementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.6'
  testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

  testImplementation group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '3.7.2'

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation sourceSets.test.runtimeClasspath

  contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

  contractTestImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.3'
  contractTestImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
  contractTestImplementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.3'


  contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
  contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'java8', version: versions.pact_version


  contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
  contractTestRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
  contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'


  contractTestRuntime group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.8.1'

  contractTestImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.1'
  contractTestImplementation group: 'org.springframework.cloud', name: 'spring-cloud-netflix-ribbon', version: '2.2.10.RELEASE'
}

mainClassName = 'uk.gov.hmcts.reform.iacasepaymentsapi.Application'

bootJar {
  getArchiveFileName().set(provider {
    'ia-case-payments-api.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
